# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1
executors:
  node:
    docker:
      - image: cimg/node:lts
  default:
    docker:
      - image: cimg/base:stable
  git:
    docker:
      - image: alpine/git

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  node: circleci/node@5.0.0

jobs:
  checkout:
    executor: git
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - '*'
  npm-ci-install:
    executor: node
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v1--npm-ci--{{ .Branch }}--{{ checksum "package-lock.json" }}
            - v1--npm-ci--{{ .Branch }}
            - v1--npm-ci
      - run: npm ci
      - save_cache:
          key: v1--npm-ci--{{ .Branch }}--{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
      - persist_to_workspace:
          root: .
          paths:
            - 'node_modules'
  npm-install:
    executor: node
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - v1--npm-i--{{ .Branch }}--{{ checksum "package-lock.json" }}
            - v1--npm-i--{{ .Branch }}
            - v1--npm-i
      - run: npm install
      - save_cache:
          key: v1--npm-i--{{ .Branch }}--{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
      - persist_to_workspace:
          root: .
          paths:
            - 'node_modules'
  codeclimate-before:
    executor: node
    resource_class: small
    steps:
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > /tmp/cc-test-reporter
            chmod +x /tmp/cc-test-reporter
      - persist_to_workspace:
          root: /tmp
          paths: 
            - cc-test-reporter
      - run:
          name: Run Code Climate test-reporter `before-build`
          command: /tmp/cc-test-reporter before-build
  codeclimate-after:
    executor: node
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - attach_workspace:
          at: /tmp
      - run:
          name: Send report
          command: /tmp/cc-test-reporter after-build --coverage-input-type lcov --exit-code $(cat ./TEST_STATUS)
  test-coverage:
    executor: node
    resource_class: medium+
    steps:
      - attach_workspace:
          at: .
      - run: npm run lint
      - run:
          command: |
            npm run test:ci:coverage
            echo $? > TEST_STATUS
          when: always
      - store_artifacts:
          path: ./junit.xml
      - store_test_results:
          path: ./junit.xml
      - store_artifacts:
          path: ./coverage
      - persist_to_workspace:
          root: .
          paths: 
            - coverage
            - TEST_STATUS
  test:
    executor: node
    resource_class: medium+
    steps:
      - attach_workspace:
          at: .
      - run: npm run lint
      - run:
          command: npm run test:ci
          when: always
      - store_artifacts:
          path: ./junit.xml
      - store_test_results:
          path: ./junit.xml
  build:
    executor: node
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - run: npm run build
      - store_artifacts:
          path: ./dist
      - persist_to_workspace:
          root: .
          paths:
            - ./dist
  git-merge-develop:
    executor: git
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Config git
          command: |
            git config --global user.email "Knodes-autosync-bot@users.noreply.github.com"
            git config --global user.name "Knodes-autosync-bot"
      - run:
          name: Merge to develop
          command: |
            git remote set-url origin https://$CIRCLE_PROJECT_USERNAME:$GITHUB_AUTH_SECRET@github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
            git merge $CIRCLE_BRANCH origin/develop -m "ci(auto-merge): auto merge $CIRCLE_BRANCH
            
            [skip ci]"
            git push --set-upstream origin develop


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  renovate: # Workflow ran only on `renovate/*`
    when:
      matches: { pattern: "^renovate/.+$", value: << pipeline.git.branch >> }
    jobs:
      - checkout
      - npm-install:
          requires:
            - checkout

      - build:
          requires:
            - npm-install
      - test:
          requires:
            - build

      # - git-merge-develop:
      #     requires:
      #       - test
      #       - build
  check: # Workflow ran on all branches except `main`, `develop` and `renovate/*`
    unless:
      or:
      #   - equal: [ main, << pipeline.git.branch >> ]
      #   - equal: [ develop, << pipeline.git.branch >> ]
        - matches: { pattern: "^renovate/.+$", value: << pipeline.git.branch >> }
    jobs:
      - checkout
      - npm-ci-install:
          requires:
            - checkout
      - codeclimate-before

      - build:
          requires:
            - npm-ci-install
      - test-coverage:
          requires:
            - build
            - codeclimate-before
      - codeclimate-after:
          requires:
            - test-coverage
